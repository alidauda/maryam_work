// This is your updated Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")

}

model User {
  id       String    @id @default(uuid())
  email    String  @unique
  name     String
  password String
  sessions Session[]
  bookings  Booking[]
  role     UserRole?     @default(GUEST) // Default role is STUDENT
   preferences Json?

}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  role      UserRole 
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}



model Property {
  id          Int             @id @default(autoincrement())
  name        String
  description String
  address     String
  imageUrl    String?
  status      PropertyStatus  @default(ACTIVE)
  rooms       Room[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Room {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  capacity    Int
  availableRoom Int
  price       Float
  status      RoomStatus @default(AVAILABLE)
  property    Property  @relation(fields: [propertyId], references: [id])
  propertyId  Int
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
}

model Booking {
  id        Int      @id @default(autoincrement())
  startDate DateTime
  endDate   DateTime
  status    BookingStatus @default(PENDING)
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}




enum UserRole {
ADMIN
GUEST
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

enum PropertyStatus {
  ACTIVE
  INACTIVE
  UNDER_MAINTENANCE
  COMING_SOON
}

enum RoomStatus {
  AVAILABLE
  OCCUPIED
  UNDER_MAINTENANCE
  OUT_OF_SERVICE
}


